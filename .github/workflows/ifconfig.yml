name: Ifconfig

on:
  push:
    branches: [ main ]
    paths:
    - "actor/ifconfig/**"
    tags:
    - 'ifconfig-v*'
  pull_request:
    branches: [ main ]
    paths:
    - "actor/ifconfig/**"

env:
  working-directory: ./actor/ifconfig
  TINYGO_VERSION: 0.23.0
  WASH_ISSUER_KEY: ${{ secrets.WASMCLOUD_ACCOUNT_OFFICIAL }}
  WASH_SUBJECT_KEY: ${{ secrets.WASMCLOUD_IFCONFIG }}

jobs:
  build_artifact:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Install TinyGo
        run: |
          curl -LO https://github.com/tinygo-org/tinygo/releases/download/v${{ env.TINYGO_VERSION }}/tinygo_${{ env.TINYGO_VERSION }}_amd64.deb
          sudo dpkg -i tinygo_${{ env.TINYGO_VERSION }}_amd64.deb

      - uses: wasmcloud/common-actions/install-wash@main

      - name: Build wasmcloud actor
        run: wash build
        working-directory: ${{ env.working-directory }}

      - name: Upload signed actor to GH Actions
        uses: actions/upload-artifact@v2
        with:
          name: wasmcloud-actor
          path: ${{ env.working-directory }}/build/*.wasm

  github_release:
    if: startswith(github.ref, 'refs/tags/') # Only run on tag push
    needs: build_artifact
    runs-on: ubuntu-20.04
    steps:
    - name: Download signed actor
      uses: actions/download-artifact@v2
      with:
        name: wasmcloud-actor
        path: ${{ env.working-directory }}/build

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        files: ${{ env.working-directory }}/build/*.wasm
        token: ${{ secrets.GITHUB_TOKEN }}
        prerelease: true
        draft: false

  artifact_release:
    needs: build_artifact
    if: startswith(github.ref, 'refs/tags/') # Only run on tag push
    runs-on: ubuntu-20.04
    steps:
      - name: Download signed actor
        uses: actions/download-artifact@v2
        with:
          name: wasmcloud-actor
          path: ${{ env.working-directory }}/build

      - name: Determine artifact metadata
        run: |
          echo "oci-version=$(wash claims inspect ./build/*_s.wasm -o json | jq -r '.version')" >> $GITHUB_ENV
          echo "oci-repository=ifconfig" >> $GITHUB_ENV
          # Waiting on https://github.com/wasmCloud/wash/issues/336
          # echo "oci-repository=$(wash claims inspect ./build/*_s.wasm -o json | jq -r '.name')" >> $GITHUB_ENV
        working-directory: ${{ env.working-directory }}

      - name: Push actor to AzureCR
        uses: wasmcloud/common-actions/oci-artifact-release@main
        with:
          artifact-path: ${{ env.working-directory }}/build/${{ env.oci-repository }}_s.wasm
          oci-url: ${{ secrets.AZURECR_PUSH_URL }}
          oci-repository: ${{ env.oci-repository }}
          oci-version: ${{ env.oci-version }}
          oci-username: ${{ secrets.AZURECR_PUSH_USER }}
          oci-password: ${{ secrets.AZURECR_PUSH_PASSWORD }}
